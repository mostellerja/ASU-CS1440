#BlueJ class context
comment0.params=
comment0.target=Activity1MethodTest()
comment0.text=\r\n\ Default\ constructor.\r\n
comment1.params=
comment1.target=int\ getGrade()
comment1.text=\r\n\ Grade\ accessor\ to\ get\ partial\ grade.\r\n\ \r\n\ @return\ current\ grade\ accumulated\ for\ activity1\r\n
comment10.params=
comment10.target=void\ testSampleData()
comment10.text=\r\n\ Tests\ the\ sample\ data\ from\ the\ assignment\ specification.\r\n
comment11.params=line
comment11.target=boolean\ lineOfUnderscores(java.lang.String)
comment11.text=\r\n\ Check\ proper\ format\ of\ output\ consisting\ of\ a\ line\ of\ underscores.\r\n\ \r\n\ @param\ line\ is\ the\ line\ to\ check\ \r\n\ @return\ boolean\ value\ indicating\ success\ of\ the\ check\r\n
comment12.params=output\ msg\ expected
comment12.target=void\ checkLine(java.util.Scanner,\ java.lang.String,\ java.lang.String)
comment12.text=\r\n\ Private\ method\ to\ check\ proper\ format\ of\ output\ line.\r\n\ \r\n\ @param\ output\ Scanner\ containing\ next\ line\ to\ check\r\n\ @param\ msg\ is\ a\ pretty\ printing\ message\r\n\ @param\ expected\ is\ the\ expected\ output\r\n
comment13.params=outputString
comment13.target=void\ verifySampleOutput(java.lang.String)
comment13.text=\r\n\ Private\ method\ to\ verify\ student\ output\ when\ given\ sample\ input.\r\n\ \r\n\ @param\ outputString\ is\ the\ student\ program's\ actual\ output\r\n
comment14.params=
comment14.target=java.lang.String\ makeRandomAlphaString()
comment14.text=\r\n\ Helper\ method\ for\ making\ random\ data.\r\n\ \r\n\ @return\ a\ random\ string\r\n
comment15.params=len
comment15.target=java.lang.String\ makeRandomAlphaString(int)
comment15.text=\r\n\ Helper\ method\ for\ making\ random\ data.\r\n\ \r\n\ @param\ len\ is\ the\ desired\ length\ of\ the\ random\ string\r\n\ @return\ the\ random\ string\ generated\r\n
comment16.params=len
comment16.target=java.lang.String\ makeRandomDigitString(int)
comment16.text=\r\n\ Helper\ method\ for\ making\ radnom\ inputs.\r\n\ \r\n\ @param\ len\ is\ the\ length\ (in\ digits)\ of\ the\ numeric\ value\r\n\ @return\ a\ string\ of\ numeric\ digits\r\n
comment17.params=
comment17.target=void\ generateInputData()
comment17.text=\r\n\ Helper\ method\ to\ generate\ random\ data\ and\ store\ in\ fields.\r\n
comment18.params=
comment18.target=void\ testRandomData()
comment18.text=\r\n\ Tests\ student\ code\ using\ random\ input\ data.\r\n
comment19.params=
comment19.target=java.lang.String[]\ buildExpectedOutput()
comment19.text=\r\n\ Helper\ method\ to\ build\ expected\ output\ from\ the\ random\ data\ fields.\r\n\ \r\n\ @return\ String\ array\ of\ expected\ output\ based\ on\ random\ data\ in\ fields\r\n
comment2.params=
comment2.target=void\ tearDown()
comment2.text=\r\n\ Tears\ down\ the\ test\ fixture.\r\n\ \r\n\ Called\ after\ every\ test\ case\ method.\r\n
comment20.params=outputString
comment20.target=void\ verifyRandomOutput(java.lang.String)
comment20.text=\r\n\ Helper\ method\ to\ verify\ output\ is\ expected.\r\n\ \r\n\ @param\ outputString\ is\ the\ student's\ output\r\n
comment21.params=
comment21.target=void\ testCheckStyle()
comment21.text=\r\n\ Entry\ point\ for\ testing\ conformance\ to\ Checkstyle.\r\n
comment22.params=
comment22.target=java.lang.String\ getXmlHeaderConfig()
comment22.text=\r\n\ Local\ method\ to\ build\ XML\ for\ checkstyle.\r\n\ \r\n\ @return\ header\ string\ for\ XML\ file\r\n
comment23.params=
comment23.target=java.lang.String\ getMagicNumbersConfig()
comment23.text=\r\n\ Local\ method\ to\ build\ XML\ for\ checkstyle.\r\n\ \r\n\ @return\ checkstyle\ module\ definition\ for\ magic\ numbers\r\n
comment24.params=
comment24.target=java.lang.String\ getWhitespacecConfig()
comment24.text=\r\n\ Local\ method\ to\ build\ XML\ for\ checkstyle.\r\n\ \r\n\ @return\ checkstyle\ module\ definition\ for\ whitespace\ around\ operators\r\n
comment25.params=
comment25.target=java.lang.String\ getXmlConfig()
comment25.text=\r\n\ Local\ method\ to\ build\ XML\ for\ checkstyle.\r\n\ \r\n\ @return\ XML\ configuration\ string\r\n
comment3.params=
comment3.target=void\ setUp()
comment3.text=\r\n\ Sets\ up\ the\ test\ fixture.\r\n\r\n\ Called\ before\ every\ test\ case\ method.\ \ Sets\ up\ new\ I/O\ streams.\r\n\ Creates\ test\ object.\r\n
comment4.params=
comment4.target=void\ resetStreams()
comment4.text=\r\n\ Resets\ I/O\ streams.\r\n
comment5.params=
comment5.target=void\ testActivity1()
comment5.text=\r\n\ The\ "entry\ point"\ for\ testing\ activity\ 1.\r\n
comment6.params=
comment6.target=void\ printGrade()
comment6.text=\r\n\ Store\ the\ grade\ then\ print\ the\ report.\r\n
comment7.params=
comment7.target=java.lang.String\ gradeReport()
comment7.text=\r\n\ Creates\ a\ string\ with\ the\ grades\ for\ output.\r\n\ \r\n\ @return\ a\ String\ containing\ the\ grader\ report\r\n
comment8.params=
comment8.target=void\ testPrevious()
comment8.text=\r\n\ Test\ previous\ activities.\r\n
comment9.params=
comment9.target=void\ testSilent()
comment9.text=\r\n\ Silently\ (no\ output)\ tests\ in\ various\ ways\ the\ activity\ 1\ work.\r\n\ Notice\ that\ we\ can\ assign\ partial\ grades\ as\ some\ "subtests"\ work\ using\r\n\ the\ grade\ field.\ \ But\ we\ must\ be\ sure\ to\ printGrade\ before\ failing.\r\n
numComments=26
